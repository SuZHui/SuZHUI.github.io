{"componentChunkName":"component---src-template-blog-post-js","path":"/article/B015CD2DF61F926D","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>如果直接在electron渲染线程中调用xhr对象发起请求，会出现跨域的问题。\nelectron中其实包含有node的几乎所有api，可以使用http模块发送请求，有一个问题是无法使用浏览器的network面板查看请求内容，不方便调试</p>\n</blockquote>\n<h3>1. 直接使用node中的http或https模块(不存在跨域的问题)</h3>\n<pre><code class=\"language-javascript\">// We need this to build our post string\nvar querystring = require('querystring');\nvar http = require('http');\nvar fs = require('fs');\n\nfunction PostCode(codestring) {\n  // Build the post string from an object\n  var post_data = querystring.stringify({\n      'compilation_level' : 'ADVANCED_OPTIMIZATIONS',\n      'output_format': 'json',\n      'output_info': 'compiled_code',\n      'warning_level' : 'QUIET',\n      'js_code' : codestring\n  });\n\n  // An object of options to indicate where to post to\n  var post_options = {\n      host: 'closure-compiler.appspot.com',\n      port: '80',\n      path: '/compile',\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': Buffer.byteLength(post_data)\n      }\n  };\n\n  // Set up the request\n  var post_req = http.request(post_options, function(res) {\n      res.setEncoding('utf8');\n      res.on('data', function (chunk) {\n          console.log('Response: ' + chunk);\n      });\n  });\n\n  // post the data\n  post_req.write(post_data);\n  post_req.end();\n\n}\n\n// This is an async file read\nfs.readFile('LinkedList.js', 'utf-8', function (err, data) {\n  if (err) {\n    // If this were just a small part of the application, you would\n    // want to handle this differently, maybe throwing an exception\n    // for the caller to handle. Since the file is absolutely essential\n    // to the program's functionality, we're going to exit with a fatal\n    // error instead.\n    console.log(\"FATAL An error occurred trying to read in the file: \" + err);\n    process.exit(-2);\n  }\n  // Make sure there's data before we post it\n  if(data) {\n    PostCode(data);\n  }\n  else {\n    console.log(\"No data to post\");\n    process.exit(-1);\n  }\n});\n</code></pre>\n<p><a href=\"https://stackoverflow.com/questions/6158933/how-is-an-http-post-request-made-in-node-js\">stackoverflow高票回答</a></p>\n<h3>2. 使用Electron提供的net模块(不存在跨域的问题)</h3>\n<p><strong>[tips]</strong> <span style=\"color:red\">只有在应用程序发出 ready 事件之后, 才能使用 net API。尝试在 ready 事件之前使用该模块将抛出一个错误</span></p>\n<pre><code class=\"language-javascript\">const { app } = require('electron')\napp.on('ready', () => {\n  const { net } = require('electron')\n  const request = net.request('https://github.com')\n  request.on('response', (response) => {\n    console.log(`STATUS: ${response.statusCode}`)\n    console.log(`HEADERS: ${JSON.stringify(response.headers)}`)\n    response.on('data', (chunk) => {\n      console.log(`BODY: ${chunk}`)\n    })\n    response.on('end', () => {\n      console.log('No more data in response.')\n    })\n  })\n  request.end()\n})\n</code></pre>\n<p><a href=\"https://electronjs.org/docs/api/net#netrequestoptions\">官方文档</a></p>","frontmatter":{"date":"June 27, 2019","path":"/article/B015CD2DF61F926D","title":"Electron中客户端请求的两种方法"}},"site":{"siteMetadata":{"title":"Just A Little","description":"just a little blog","author":"@SuZHui <https://github.com/SuZHui>"}}},"pageContext":{}},"staticQueryHashes":["4224293195"]}